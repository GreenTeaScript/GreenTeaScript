// written by kimio kuramitsu

void f1(int n) {
	if(n > 0) {
		assert(n > 0);
	}
	else {
		assert(n <= 0);
	}
}

int f2(int a) {
	if(a==1) {
		return 1;
	}
	else if(a == 2) { /*hoge*/
		return 2;
	}
	/*hoge*/
	else {
		return 0;
	}
}

void f3(int n) {
	if(n > 0) {
		if(n < 0) { 
			assert(false);  // never hit
		}
	}
	else {
		if(n > 0) {
			assert(false);  // never hit
		}
	}
}

void f4(int n) {
	if(n > 0) assert(n > 0);
	else assert(n <= 0);
}

void f5(int n) {
	int c = 0;
	if(n == 1) c = n;
	c = c + 1;
	assert(c == 2);
}

void f6(int n) {
	if(n > 0) {
		assert(n > 0);
		return;
	}
	assert(n <= 0);
}

void f7(int n) {
	if(n > 0) {
		assert(n > 0);
	}
	else assert(n <= 0);
}

void f8(int n) {
	if(n > 0) assert(n > 0);
}

void f9(int n) {
	if(n > 0) assert(n > 0);
	else {
		assert(n <= 0);
	}
}

void f10(int n) {
	if(n > 0) assert(n > 0); else assert(n <= 0);
}

void f11(int n) {
	if(n > 0) {
		assert(n > 0);
	}else {
		assert(n <= 0);
	}
}



@Export
int main() {
	f1(0);
	f1(1);
	assert(f2(0) == 0);
	assert(f2(1) == 1);
	assert(f2(2) == 2);
	f3(0);
	f3(1);
	f4(0);
	f4(1);
	f5(1);
	f6(0);
	f6(1);
	f7(0);
	f7(1);
	f8(0);
	f8(1);
	f9(0);
	f9(1);
	f10(0);
	f10(1);
	f11(0);
	f11(1);
	return 0;
}

