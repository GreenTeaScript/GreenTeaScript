int +(int x) as "$1";
int -(int x) as "-$1";
int +(int x, int y)      as "$1 + $2";
int -(int x, int y)      as "$1 - $2";
int *(int x, int y)      as "$1 * $2";
int /(int x, int y)      as "$1 / $2";
int %(int x, int y)      as "$1 % $2";
int <<(int x, int y)     as "$1 << $2";
int >>(int x, int y)     as "$1 >> $2";
int ^(int x, int y)      as "$1 ^ $2";
int |(int x, int y)      as "$1 | $2";
int &(int x, int y)      as "$1 & $2";
boolean <(int x,  int y) as "$1 < $2";
boolean <=(int x, int y) as "$1 <= $2";
boolean >(int x,  int y) as "$1 > $2";
boolean >=(int x, int y) as "$1 >= $2";
boolean ==(int x, int y) as "$1 == $2";
boolean !=(int x, int y) as "$1 != $2";

//typeof[1] +=(any x, typeof(x) y) as "$1 = $1 + $2";

String +(String x, String y) as "$1 . $2";
boolean ==(String x, String y) as "$1 eq $2";
boolean !=(String x, String y) as "$1 ne $2";
int length(String x) as "length($1)";
String concat(String x, String y) as "$1 . $2";

void print(String x) as "print ($1)";
void assert(boolean x) as "($1 == 1) or die \"Assertion faild\"";

//typeof(a)[0] add(Array<any> a, typeof(a)[0] v); 
//typeof(a)[0] get(Array<var> a, int index);
//
//void f(var duck) {
//	print $duck.name;
//}
