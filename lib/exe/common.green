

// unary operator
boolean not(boolean x);
boolean !(boolean x);
int +(int x);
int -(int x);
int ~(int x);

// binary operator

// boolean
boolean ==(boolean x, boolean y);
boolean !=(boolean x, boolean y);
@Coercion @Const String converter(boolean x) import org.GreenTeaScript.GreenTeaRuntime.BooleanToString;
@Coercion @Const any converter(boolean x) import org.GreenTeaScript.GreenTeaRuntime.BooleanToAny;
@Coercion @Const boolean converter(any x) import org.GreenTeaScript.GreenTeaRuntime.AnyToBoolean;

// int
int +(int x, int y);
int -(int x, int y);
int *(int x, int y);
int /(int x, int y);
int %(int x, int y);
int <<(int x, int y);
int >>(int x, int y);
int ^(int x, int y);
int |(int x, int y);
int &(int x, int y);
boolean <(int x,  int y);
boolean <=(int x, int y);
boolean >(int x,  int y);
boolean >=(int x, int y);
boolean ==(int x, int y);
boolean !=(int x, int y);

@Coercion @Const any converter(int x) import org.GreenTeaScript.GreenTeaRuntime.IntToAny;
@Coercion @Const int converter(any x) import org.GreenTeaScript.GreenTeaRuntime.AnyToInt;
@Coercion @Const String converter(int x) import org.GreenTeaScript.GreenTeaRuntime.IntToString;
@Const int converter(String x) import org.GreenTeaScript.GreenTeaRuntime.StringToInt;

// String
String +(String x, String y);
String +(String x, int y);
String +(String x, boolean y);
String +(int x, String y);
String +(boolean x, String y);
boolean ==(String x, String y);
boolean !=(String x, String y);

// function
void print(any s);
void println(any s);
void assert(boolean b) import org.GreenTeaScript.GreenTeaRuntime.assert_;

void test2(String[] s, ArrayList<String> b) import org.GreenTeaScript.GreenTeaRuntime.test2;
