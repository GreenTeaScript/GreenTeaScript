// unary operator

@Const @Operator boolean not(boolean x) import org.GreenTeaScript.GreenTeaRuntime.unary_not;
@Const @Operator boolean !(boolean x) import org.GreenTeaScript.GreenTeaRuntime.unary_not;
@Const @Operator int +(int x) import org.GreenTeaScript.GreenTeaRuntime.unary_plus;
@Const @Operator int -(int x) import org.GreenTeaScript.GreenTeaRuntime.unary_minus;
@Const @Operator int ~(int x) import org.GreenTeaScript.GreenTeaRuntime.unary_not;

// binary operator

// boolean
@Const @Operator boolean ==(boolean x, boolean y) import org.GreenTeaScript.GreenTeaRuntime.binary_eq;
@Const @Operator boolean !=(boolean x, boolean y) import org.GreenTeaScript.GreenTeaRuntime.binary_ne;

@Const @Coercion String converter(boolean x) import org.GreenTeaScript.GreenTeaRuntime.BooleanToString;
@Const @Coercion any converter(boolean x) import org.GreenTeaScript.GreenTeaRuntime.BooleanToAny;
@Const @Coercion boolean converter(any x) import org.GreenTeaScript.GreenTeaRuntime.AnyToBoolean;

// int
@Const @Operator int +(int x, int y) import org.GreenTeaScript.GreenTeaRuntime.binary_add;
@Const @Operator int -(int x, int y) import org.GreenTeaScript.GreenTeaRuntime.binary_sub;
@Const @Operator int *(int x, int y) import org.GreenTeaScript.GreenTeaRuntime.binary_mul;
@Const @Operator int /(int x, int y) import org.GreenTeaScript.GreenTeaRuntime.binary_div;
@Const @Operator int %(int x, int y) import org.GreenTeaScript.GreenTeaRuntime.binary_mod;
@Const @Operator int <<(int x, int y) import org.GreenTeaScript.GreenTeaRuntime.binary_shl;
@Const @Operator int >>(int x, int y) import org.GreenTeaScript.GreenTeaRuntime.binary_shr;
@Const @Operator int ^(int x, int y) import org.GreenTeaScript.GreenTeaRuntime.binary_and;
@Const @Operator int |(int x, int y) import org.GreenTeaScript.GreenTeaRuntime.binary_or;
@Const @Operator int &(int x, int y) import org.GreenTeaScript.GreenTeaRuntime.binary_xor;
@Const @Operator boolean <(int x,  int y) import org.GreenTeaScript.GreenTeaRuntime.binary_lt;
@Const @Operator boolean <=(int x, int y) import org.GreenTeaScript.GreenTeaRuntime.binary_le;
@Const @Operator boolean >(int x,  int y) import org.GreenTeaScript.GreenTeaRuntime.binary_gt;
@Const @Operator boolean >=(int x, int y) import org.GreenTeaScript.GreenTeaRuntime.binary_ge;
@Const @Operator boolean ==(int x, int y) import org.GreenTeaScript.GreenTeaRuntime.binary_eq;
@Const @Operator boolean !=(int x, int y) import org.GreenTeaScript.GreenTeaRuntime.binary_ne;

@Coercion @Const any converter(int x) import org.GreenTeaScript.GreenTeaRuntime.IntToAny;
@Coercion @Const int converter(any x) import org.GreenTeaScript.GreenTeaRuntime.AnyToInt;
@Coercion @Const String converter(int x) import org.GreenTeaScript.GreenTeaRuntime.IntToString;
@Const int converter(String x) import org.GreenTeaScript.GreenTeaRuntime.StringToInt;

@Coercion @Const var converter(var x) import org.GreenTeaScript.GreenTeaRuntime.l2i;
@Coercion @Const var converter(var x) import org.GreenTeaScript.GreenTeaRuntime.i2l;
@Coercion @Const var converter(var x) import org.GreenTeaScript.GreenTeaRuntime.l2s;
@Coercion @Const var converter(var x) import org.GreenTeaScript.GreenTeaRuntime.s2l;

@Coercion @Const var converter(var x) import org.GreenTeaScript.GreenTeaRuntime.ja2l;
@Coercion @Const var converter(var x) import org.GreenTeaScript.GreenTeaRuntime.l2ja;

// String
@Const @Operator String +(String x, String y) import org.GreenTeaScript.GreenTeaRuntime.binary_add;
@Const @Operator String +(int x, String y) import org.GreenTeaScript.GreenTeaRuntime.binary_add;
@Const @Operator String +(boolean x, String y) import org.GreenTeaScript.GreenTeaRuntime.binary_add;

@Const @Operator boolean ==(String x, String y) import org.GreenTeaScript.GreenTeaRuntime.binary_eq;
@Const @Operator boolean !=(String x, String y) import org.GreenTeaScript.GreenTeaRuntime.binary_ne;

void print(String s)   import org.GreenTeaScript.LibGreenTea.print;
void println(String s) import org.GreenTeaScript.LibGreenTea.println;
void assert(boolean b) import org.GreenTeaScript.LibGreenTea.Assert;

