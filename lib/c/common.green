// common api for c

// unary operator
// any
@Const @Operator int +(int x) as "$1";
@Const @Operator int -(int x) as "-$1";
@Const @Operator int ~(int x) as "~$1";

// binary operator
// any
@Const @Operator boolean ==(any x, any y) as "$1  == $2";
@Const @Operator boolean !=(any x, any y) as "$1  != $2";
@Const @Operator boolean !(boolean x) as "! $1"

// boolean
@Const @Operator boolean ==(boolean x, boolean y) as "$1  == $2";
@Const @Operator boolean !=(boolean x, boolean y) as "$1  != $2";
@Const @Operator String converter(boolean x) as "green_toString($1)";

// int 
@Const @Operator int +(int x, int y)      as "$1 + $2";
@Const @Operator int -(int x, int y)      as "$1 - $2";
@Const @Operator int *(int x, int y)      as "$1 * $2";
@Const @Operator int /(int x, int y)      as "$1 / $2";
@Const @Operator int %(int x, int y)      as "$1 % $2";
@Const @Operator int <<(int x, int y)     as "$1 << $2";
@Const @Operator int >>(int x, int y)     as "$1 >> $2";
@Const @Operator int ^(int x, int y)      as "$1 ^ $2";
@Const @Operator int |(int x, int y)      as "$1 | $2";
@Const @Operator int &(int x, int y)      as "$1 & $2";
@Const @Operator boolean <(int x,  int y) as "$1 < $2";
@Const @Operator boolean <=(int x, int y) as "$1 <= $2";
@Const @Operator boolean >(int x,  int y) as "$1 > $2";
@Const @Operator boolean >=(int x, int y) as "$1 >= $2";
@Const @Operator boolean ==(int x, int y) as "$1 == $2";
@Const @Operator boolean !=(int x, int y) as "$1 != $2";

String convert(int x) as "ToStr($1)";

// String
@Const @Operator String +(String x, String y)      as "greentea_strcat($1, $2)";
@Const @Operator boolean ==(String x, String y)    as "strcmp($1, $2) == 0";
boolean !=(String x, String y)    as "strcmp($1, $2) != 0";
boolean <(String x,  String y)    as "strcmp($1, $2) <= 0";
boolean <=(String x, String y)    as "strcmp($1, $2) <  0";
boolean >(String x,  String y)    as "strcmp($1, $2) >  0";
boolean >=(String x, String y)    as "strcmp($1, $2) >= 0";

boolean startsWith(String x, String y) as "$1.startswith($2)";
boolean endsWith(String x, String y) as "$1.endswith($2)";
int indexOf(String x, String sub) as "$1.find($2)";
int lastIndexOf(String x, String sub) as "$1.rfind($2)";
String substring(String x, int s) as "$1[$2:]"
String substring(String x, int s, int e) as "$1[$2:$3]"; 
String toLower(String x) as "$1.lower()";
String toUpper(String x) as "$1.upper()";
int charAt(String x, int pos) as "$1[$2]";
String replace(String x, String old, String new) as "$1.replace($2, $3)";

// function
void print(String x) as "puts($1)";
void println(String x) as "puts($1); putchar('\n')";
void assert(boolean x) as "assert($1)";
